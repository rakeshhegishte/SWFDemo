/*
 * This code was generated by AWS Flow Framework Annotation Processor.
 * Refer to Amazon Simple Workflow Service documentation at http://aws.amazon.com/documentation/swf 
 *
 * Any changes made directly to this file will be lost when 
 * the code is regenerated.
 */
 package com.dc.swf.workflow;

import com.amazonaws.services.simpleworkflow.flow.core.Promise;
import com.amazonaws.services.simpleworkflow.flow.ActivitiesClient;
import com.amazonaws.services.simpleworkflow.flow.ActivitySchedulingOptions;

/**
 * Generated from {@link com.dc.swf.workflow.TaskManagerActivities}. 
 * Used to invoke activities asynchronously from workflow code.
 */
public interface TaskManagerActivitiesClient extends ActivitiesClient
{

    /**
     * Generated from {@link com.dc.swf.workflow.TaskManagerActivities#activity1}
     */
    Promise<String> activity1();

    /**
     * Generated from {@link com.dc.swf.workflow.TaskManagerActivities#activity1}
     */
    Promise<String> activity1(Promise<?>... waitFor);

    /**
     * Generated from {@link com.dc.swf.workflow.TaskManagerActivities#activity1}
     */
    Promise<String> activity1(ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.dc.swf.workflow.TaskManagerActivities#manualActivity}
     */
    Promise<String> manualActivity();

    /**
     * Generated from {@link com.dc.swf.workflow.TaskManagerActivities#manualActivity}
     */
    Promise<String> manualActivity(Promise<?>... waitFor);

    /**
     * Generated from {@link com.dc.swf.workflow.TaskManagerActivities#manualActivity}
     */
    Promise<String> manualActivity(ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

    /**
     * Generated from {@link com.dc.swf.workflow.TaskManagerActivities#activity2}
     */
    Promise<String> activity2();

    /**
     * Generated from {@link com.dc.swf.workflow.TaskManagerActivities#activity2}
     */
    Promise<String> activity2(Promise<?>... waitFor);

    /**
     * Generated from {@link com.dc.swf.workflow.TaskManagerActivities#activity2}
     */
    Promise<String> activity2(ActivitySchedulingOptions optionsOverride, Promise<?>... waitFor);

}